@font-face { 
    src:
        local('Libertinus Mono'), 
        url('../../assets/LibertinusMono-Regular.ttf') format('truetype');
    font-family: 'Libertinus Mono';
    font-weight: 400;
    font-style: normal;
}

:root {
    --page-inline-padding: 2vw;
    --page-padding-bottom: 15vh;
}

:root
{    
    --hsl-f9: 0, 0%, 98%;
    --hsl-6a: 0, 0%, 42%;

    --clr-ff: #ffffff;
    --clr-f9: #f9f9f9;
    --clr-e8: #e8e8e8;
    --clr-d8: #d8d8d8;
    --clr-cc: #cccccc;
    --clr-b8: #b8b8b8;
    --clr-ab: #ababab;
    --clr-6a: #6a6a6a;
    --clr-48: #484848;
    
    --clr-index: #10b981;
    --clr-write-post: #ffdf29;
    --clr-write-reply: #a2ff29;
    --clr-notifications: #ff2929;
    --clr-login: #4affc3;
    --clr-create-account: #ff8725;
    --clr-profile: #d359f8;
    --clr-logout: #ac3fff;
    --clr-delete-account: #840000;
    
    --rgb-00: 0, 0, 0;
    
    --bkg-post-card: #fffdf2;
    --bkg-reply-card: #fbfff5;
    --bkg-notification-card: #fff6f6;
    
    --clr-txt: #343A40;
    --clr-link: #551a8b;
    --clr-selected: #ffd17c; 
}

:root.moon-mode 
{
    --hsl-f9: 0, 0%, 2%;
    --hsl-6a: 0, 0%, 58%;

    --clr-ff: #000000;
    --clr-f9: #060606;
    --clr-e8: #171717;
    --clr-d8: #272727;
    --clr-cc: #333333;
    --clr-b8: #474747;
    --clr-ab: #545454;
    --clr-6a: #959595;
    --clr-48: #b7b7b7;

    --clr-light-blue: #c47d09;
    
    --clr-index: #ef467e;
    --clr-write-post: #0020d6;
    --clr-write-reply: #5d00d6;
    --clr-notifications: #00d6d6;
    --clr-login: #b5003c;
    --clr-create-account: #0078da;
    --clr-profile: #2ca607;
    --clr-logout: #53c000;
    --clr-delete-account: #7bffff;
    
    --rgb-00: 255, 255, 255;
    
    --bkg-post-card: #00020d;
    --bkg-reply-card: #04000a;
    --bkg-notification-card: #000909;
    
    --clr-txt: #f9fafb;
    --clr-link: #aae574;
    --clr-selected: #002e83;
}

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Libertinus Mono', monospace;
    display: flex;    
    align-items: center;
    justify-content: center;
    background-color: var(--clr-f9);
    color: var(--clr-txt);
    font-size: 1rem;
}

@media (min-width: 500px) {
    body {
        font-size: 1.2rem;
    }
}

main {
    flex-grow: 2;
    max-width: 1200px;
    padding-block: 2vh;
    padding-inline: var(--page-inline-padding);
    height: 100vh;
    overflow-y: scroll;
    scrollbar-width: none;
    /* Otherwise open-website-nav-btn may cover some content at the bottom of the page */
    padding-bottom: var(--page-padding-bottom);
}

main > * {
    margin-inline: auto;
}

a, button, textarea, input {
    font: inherit;
}
button, textarea, input {
    color: inherit;
}

a {
    text-decoration: none;
    text-transform: capitalize;
    color: var(--clr-link);
}

a:hover {
    text-decoration: underline;
}

.info-msg {
    padding-top: 2rem;
    margin-inline: auto;
    max-width: 70ch;
    text-align: center;
}

.cards-container > * {
    margin-inline: auto;
}

.cards-container:empty {
    padding-top: 2rem;
    max-width: 70ch;
    text-align: center;
}

p {
    line-height: 1.4;
}

/*
 *
 *  Side Nav
 */

#side-panel 
{
    --profile-pic-size: 60px;
    --list-fs: 1.5rem;
    --bullet-size: .3em;

    position: fixed;
    bottom: 0;
    right: -100%;
    height: 100vh;
    max-width: 80vw;

    font-size: var(--list-fs);
    padding: 1.2em;
    background-color: var(--clr-f9);
    border-left: 1px solid var(--clr-b8);
    box-shadow: -2px 0px 8px var(--clr-cc);

    /* In this way, #show-side-panel-btn is behind #side-panel
    ==> No need to set #show-side-panel-btn to display-none.
    Moreover, there isn't movement of the layout. */
    z-index: 2;

    transition: right 0.3s ease;
}

@media (min-width: 600px) {
    #side-panel {
        --profile-pic-size: 70px;
        --list-fs: 2rem;
    }
}

#side-panel.shown {
    right: 0;
}

#side-panel:not(:has(li[itemprop=profile])) {
    /* When the profile icon is absent, the sun-mode/moon-mode button feels too attached to the menu */
    padding-top: 2.4em;
}

#side-panel menu {
    font-size: inherit;
    line-height: 1.4;
    list-style: none;
    /* avoid 'create-account' link from wrapping onto two lines */
    white-space: nowrap;
}

#side-panel menu li {
    /* for the bullet made with ::before */
    position: relative;
}

#side-panel li[itemprop=profile] {
    margin-bottom: .5em;
    width: fit-content;
}

#side-panel li:not(li[itemprop=profile]) {
    margin-bottom: .25em;
    padding-left: calc(var(--bullet-size)*3); 
}

/* Apply this margin only when the profile-pic is present. */
#side-panel:has(li[itemprop=profile]) li:not(li[itemprop=profile]) {
    /* This margin is to align the bullets with the profile pic 
    and equally space left and right of the list items. */
    margin-inline: calc(var(--profile-pic-size)/2 - var(--bullet-size)/2);
}

#side-panel li:not(li[itemprop=profile])::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    
    width: var(--bullet-size);
    aspect-ratio: 1;
    border-radius: 100%;
    background-color: var(--circle-color);
    border: 1px solid var(--clr-48);
}

#side-panel li[itemprop=profile] a > span {
    display: block;
    width: var(--profile-pic-size);
    /* I don't use aspect-ratio, so I can regulate them separately.
    E.g. when I collapse the nav. */
    height: var(--profile-pic-size);
    background-color: var(--clr-ff);
    border-radius: 100%;
    overflow: hidden;
    position: relative;
    box-shadow: 0 0px 3px var(--clr-cc);
}

#side-panel li[itemprop=profile] a > span:hover {
    box-shadow: 0 2px 4px 1px var(--clr-cc);
}

#side-panel li[itemprop=profile] a > span .circle {
    position: absolute;
    aspect-ratio: 1;
    border-radius: 100%;
}

/* 
 * Color-specific customization */

li[itemprop=index]::before {
    --circle-color: var(--clr-index);
}
li[itemprop=write-post]::before {
    --circle-color: var(--clr-write-post);
}
li[itemprop=notifications]::before {
    --circle-color: var(--clr-notifications);
}
li[itemprop=login]::before {
    --circle-color: var(--clr-login);
}
li[itemprop=create-account]::before {
    --circle-color: var(--clr-create-account);
}
li[itemprop=profile]::before {
    --circle-color: var(--clr-profile);
}
li[itemprop=logout]::before {
    --circle-color: var(--clr-logout);
}
li[itemprop=delete-account]::before {
    --circle-color: var(--clr-delete-account);
} 

/* 
    Sun & Moon icons */

#sun-mode-btn,
#moon-mode-btn 
{
    border: unset;
    background: unset;

    position: absolute;
    top: 15px;
    right: 15px;
    z-index: 2;
    border-radius: 100%;

    --icon-size: 40px;
}

#sun-mode-btn:hover,
#moon-mode-btn:hover {
    box-shadow: 0px 0px 0px calc(var(--icon-size)/8) hsl(var(--hsl-6a), .25);
}

#sun-mode-btn {
    width: var(--icon-size);
    aspect-ratio: 1;
    align-items: center;
    justify-content: center;
}

#sun-icon {
    position: relative;
    --ray-length: var(--icon-size);
    --sun-diameter: calc(var(--icon-size) * 2/3);
}

#sun-icon span {
    display: block;
}

#sun {
    width: var(--sun-diameter);
    aspect-ratio: 1;
    border-radius: 100%;
    background-color: var(--clr-txt);
    border: 3px solid var(--clr-f9);
    position: relative;
}

.ray {
    position: absolute;
    top: -25%;
    left: calc(50% - 2px);
    width: 4px;
    border-radius: 4px;
    height: var(--ray-length);
    background-color: var(--clr-txt);
    transform-origin: center;
}

.ray:nth-child(1) { transform: rotate(0deg); }
.ray:nth-child(2) { transform: rotate(45deg); }
.ray:nth-child(3) { transform: rotate(90deg); }
.ray:nth-child(4) { transform: rotate(135deg); } 

#moon-icon {
    position: relative;
    overflow: hidden;
    background-color: var(--clr-f9);
    --moon-size: calc(var(--icon-size) - 5px);
}

#moon-icon span {
    display: block;
}

#moon {
    border-radius: 100%;
    background-color: var(--clr-txt);
    width: var(--moon-size);
    aspect-ratio: 1;
}

#sky {
    position: absolute;
    top: calc(var(--moon-size) / (-3));
    right: calc(var(--moon-size) / (-3));
    z-index: 2;
    width: var(--moon-size);
    height: var(--moon-size);
    border-radius: 100%;
    background-color: var(--clr-f9);
}

#show-side-panel-btn {
    --bottom: 4vh;
    position: fixed;
    bottom: var(--bottom);
    right: 4vh;
    border: unset;
    font-size: 2rem;
    border-radius: 8px;
    color: var(--clr-6a);
    padding: .15em;
    padding-right: .65em;
    backdrop-filter: blur(10px);
    background-color: hsl(var(--hsl-f9), .5);
    border: 1px solid var(--clr-b8);
}

#show-side-panel-btn:hover {
    background-color: var(--clr-e8);
}

@media (min-width: 1300px) 
{
    /* Avoid the button to go too far at the edge of the page */
    #show-side-panel-btn {
        position: static;
        align-self: flex-end;
        margin-bottom: var(--bottom);
    }
}

/*
 *
 *  States
 */

/* I created these states because sometimes in JS you may write e.g. 'div.style.display = "flex"',
but, by doing so, you embed CSS in the HTML ==> '<div style="display: flex"></div>',
that has higher priority compared to the CSS classes. 
And so, sometimes elements are shown/hidden unexpectedly because of the usage different specificities (especially in a big codebase).
Therefore, I modify the state only via CSS classes. */

.display-block {
    display: block;
}

.display-flex {
    display: flex;
}

.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
}

.display-none {
    display: none;
}

.display-opaque {
    opacity: .5;
    user-select: none;
}
.display-opaque a,
.display-opaque button {
    pointer-events: none;
}


/*
 *
 *  Buttons
 */

button {
    cursor: pointer;
    color: var(--clr-txt);
}

.primary-btn {
    border-radius: 12px;
    border-width: 1px;
    transition: all 0.035s ease;
    user-select: none;
    box-shadow: 
        0 2px 0 var(--clr-b8),
        0 4px 6px rgba(var(--rgb-00), 0.1);
    transform: translateY(0);
    padding-block: .67em;
    padding-inline: 1.2em;
}

.primary-btn {
    background: linear-gradient(180deg, var(--clr-ff) 0%, var(--clr-e8) 100%);
    border: 1px solid var(--clr-ab);
}

.primary-btn:not(:disabled):hover {
    transform: translateY(-1px);
    background: linear-gradient(180deg, var(--clr-f9) 0%, var(--clr-e8) 100%);
    box-shadow: 
        0 3px 0 var(--clr-b8),
        0 6px 8px rgba(var(--rgb-00), 0.12);
}

.primary-btn:not(:disabled):active {
    transform: translateY(1px);
    background: linear-gradient(180deg, var(--clr-e8) 0%, var(--clr-d8) 100%);
    box-shadow: 
        0 1px 0 var(--clr-b8),
        0 2px 4px rgba(var(--rgb-00), 0.15);
}

.primary-btn:disabled {
    opacity: .7;
}

.secondary-btn {
    padding: .25em .5em;
    border-radius: 8px;
    transition: all 0.035s ease;
    user-select: none;
    box-shadow: 0 1px 2px rgba(var(--rgb-00), 0.05);
    background-color: var(--clr-e8);
    border: 1px solid var(--clr-cc);
    font-size: 1.1rem;
}

.secondary-btn:hover {
    border-color: var(--clr-ab);
    box-shadow: 0 2px 4px rgba(var(--rgb-00), 0.08);
}

.secondary-btn:active {
    box-shadow: 0 1px 2px rgba(var(--rgb-00), 0.1);
    transform: translateY(1px);
}

.secondary-btn.selected {
    border-color: var(--clr-ab);
    background-color: var(--clr-selected);
}


/*
 *
 *  Cards
 */

.card {
    --text-line-length: 70ch;
    --padding: 1em;
    --border-thickness: 1px;
    --card-max-width: calc(var(--text-line-length) + var(--padding)*2 + var(--border-thickness)*2);

    padding: var(--padding);
    border: 1px solid var(--clr-cc);
    box-shadow: 0 4px 12px rgba(var(--rgb-00), 0.1);
    max-width: var(--card-max-width);

    /* If overflow isn't set to hidden, when the card is deleted, 
    the text would appear to spill out the boundaries of the shrinking card (See card.deleting) */
    overflow: hidden;
}

.card p {
    color: var(--clr-txt);
    line-height: 1.4;
    /* max-width: var(--text-line-length); */
    /* width: 100%; */

    /* Keep extra whitespaces and newlines.
    A side-effect of this property is that if the text is selected,
    the selection overflows a bit the card. */
    white-space: pre-wrap; 
}

.card time,
.card a {
    font-size: .9rem;
}

.card.deleting 
{
    transition: all .3s ease-out;
    transform-origin: top;
    opacity: 0;
    transform: scaleY(0);
    margin-bottom: 0;
    padding-top: 0;
    padding-bottom: 0;
    max-height: 0;
}

@media (min-width: 500px) {
    .card time,
    .card a {
        font-size: initial;
    }
}

.post-card {
    background-color: var(--bkg-post-card);
}

.reply-card {
    background-color: var(--bkg-reply-card);
}

.notification-card {
    background-color: var(--bkg-notification-card);
}

.post-card time,
.reply-card time {
    display: block;
    text-align: right;
    padding-top: 1em;
    color: var(--clr-48);
}

.post-card a {
    display: inline-block;
    margin-top: .5em;
}

.notification-card footer,
.post-card footer {
    margin-top: 1em;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.notification-card button,
.post-card button {
    font-size: 1rem;
}

.feedback-card {    
    border-radius: 8px;
    border: unset;
    border-left: 4px solid;
    background-color: var(--clr-ff);
    transition: transform 0.2s ease, box-shadow 0.2s ease;

    /* For the close button ('x') that has position absolute. */
    position: relative;
}

.feedback-card span[role=img] {
    /* I don't want the text inside the icon to be regulated based on user rem. */
    font-size: 13px;
    height: 22px;
    aspect-ratio: 1;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: var(--clr-ff);
}

.feedback-card p {
    padding-inline: 1em;
    /* Override */
    white-space: unset;
}

.feedback-card p .type {
    font-weight: 600;
    font-size: 1.1rem;
    margin-bottom: .2em;
    line-height: initial;
    display: block;
    text-transform: capitalize;
}

.feedback-card p .msg {
    font-size: 1rem;
    opacity: 0.8;
    max-width: 70ch;
    white-space: pre-wrap; 
}

.feedback-card .close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    border: none;
    background: none;
    opacity: 0.5;
    font-size: 16px;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    user-select: none;
    
    display: flex;
    align-items: center;
    justify-content: center;

    transition: opacity 0.2s ease, background-color 0.2s ease;
}

.feedback-card .close-btn:hover {
    opacity: 1;
    background-color: rgba(var(--rgb-00), 0.1);
}

@media (min-width: 500px) 
{
    .feedback-card span[role=img] {
        font-size: 16px;
        height: 25px;
    }

    .feedback-card p .type {
        font-size: 1.3rem;
    }

    .feedback-card p .msg {
        font-size: 1.1rem;
    }
}

.info {
    border-left-color: #3b82f6;
    display: flex;
}
.info span[role=img] {
    background-color: #3b82f6;
}
.info span[role=img]:after {
    content: 'i';
}
.info p .type {
    color: #3b82f6;
}

.success {
    border-left-color: #10b981;
    display: flex;
}
.success span[role=img] {
    background-color: #10b981;
}
.success span[role=img]:after {
    content: '✓';
}
.success p .type {
    color: #10b981;
}

.warning {
    border-left-color: #ff8228;
    display: flex;
}
.warning span[role=img] {
    background-color: #ff8228;
}
.warning span[role=img]:after {
    content: '!';
}
.warning p .type {
    color: #e0640c;
}

.error {
    border-left-color: #ef4444;
    display: flex;
}
.error span[role=img] {
    background-color: #ef4444;
}
.error span[role=img]:after {
    content: '✗';
}
.error p .type {
    color: #d31a1a;
}


/*
 *
 *  Form
 */

form {
    --text-line-length: 70ch;
    --input-padding: 1.2rem;
    --border-thickness: 1px;

    max-width: calc(var(--text-line-length) + var(--input-padding)*2 + var(--border-thickness)*2);
}

form > input {
    padding: var(--input-padding);
    line-height: 1.4;
    width: 100%;
    background-color: var(--clr-f9);
    border: 1px solid var(--clr-ab);
}

form > textarea {
    padding: var(--input-padding);
    line-height: 1.4;
    width: 100%;
    resize: vertical;
    border: 1px solid var(--clr-cc);
    box-shadow: 0 4px 12px rgba(var(--rgb-00), 0.1);
}

input:focus-visible,
textarea:focus-visible {
    outline: none;
}

form > button[type=submit] {
    display: block;
    margin-top: .5rem;
}

form > .feedback-card {
    margin-block: 5px;
}
